{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates Pipeline Infrastructure",
    "Parameters":
    {
        "KMSKeyArn": {
          "Description": "KMS Key ARN for S3 encryption",
          "Type": "String",
          "ConstraintDescription": "can contain only ASCII characters."
        },
        "ManagedPolicyArn": {
          "Type": "String",
          "Description": "CodeDeploy managed policy",
          "Default": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
      }
    },
    "Resources":
    {
      "RoleCodePipelineDeployment": {
      "Type": "AWS::IAM::Role",
      "Properties": {
          "RoleName": "CodePipelineServiceRole",
          "Description": "Allows CodePipeline to call AWS services such as Auto Scaling on your behalf.",
          "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "codepipeline.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
          },
          "Path": "/service-role/"
      }
  },
  "CodePipelineServicePolicy":
  {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
          "Description": "Policy used in trust relationship with CodePipeline",
          "ManagedPolicyName": "CodePipelineSampleAppManagedPolicy",
          "PolicyDocument": {
              "Statement": [
                  {
                      "Action": [
                          "iam:PassRole"
                      ],
                      "Resource": "*",
                      "Effect": "Allow",
                      "Condition": {
                          "StringEqualsIfExists": {
                              "iam:PassedToService": [
                                  "cloudformation.amazonaws.com",
                                  "elasticbeanstalk.amazonaws.com",
                                  "ec2.amazonaws.com",
                                  "ecs-tasks.amazonaws.com"
                              ]
                          }
                      }
                  },
                  {
                      "Action": [
                          "codecommit:CancelUploadArchive",
                          "codecommit:GetBranch",
                          "codecommit:GetCommit",
                          "codecommit:GetUploadArchiveStatus",
                          "codecommit:UploadArchive"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "codedeploy:CreateDeployment",
                          "codedeploy:GetApplication",
                          "codedeploy:GetApplicationRevision",
                          "codedeploy:GetDeployment",
                          "codedeploy:GetDeploymentConfig",
                          "codedeploy:RegisterApplicationRevision"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "codestar-connections:UseConnection"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "elasticbeanstalk:*",
                          "ec2:*",
                          "elasticloadbalancing:*",
                          "autoscaling:*",
                          "cloudwatch:*",
                          "s3:*",
                          "sns:*",
                          "cloudformation:*",
                          "rds:*",
                          "sqs:*",
                          "ecs:*"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "lambda:InvokeFunction",
                          "lambda:ListFunctions"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "opsworks:CreateDeployment",
                          "opsworks:DescribeApps",
                          "opsworks:DescribeCommands",
                          "opsworks:DescribeDeployments",
                          "opsworks:DescribeInstances",
                          "opsworks:DescribeStacks",
                          "opsworks:UpdateApp",
                          "opsworks:UpdateStack"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "cloudformation:CreateStack",
                          "cloudformation:DeleteStack",
                          "cloudformation:DescribeStacks",
                          "cloudformation:UpdateStack",
                          "cloudformation:CreateChangeSet",
                          "cloudformation:DeleteChangeSet",
                          "cloudformation:DescribeChangeSet",
                          "cloudformation:ExecuteChangeSet",
                          "cloudformation:SetStackPolicy",
                          "cloudformation:ValidateTemplate"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "codebuild:BatchGetBuilds",
                          "codebuild:StartBuild",
                          "codebuild:BatchGetBuildBatches",
                          "codebuild:StartBuildBatch"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "devicefarm:ListProjects",
                          "devicefarm:ListDevicePools",
                          "devicefarm:GetRun",
                          "devicefarm:GetUpload",
                          "devicefarm:CreateUpload",
                          "devicefarm:ScheduleRun"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "servicecatalog:ListProvisioningArtifacts",
                          "servicecatalog:CreateProvisioningArtifact",
                          "servicecatalog:DescribeProvisioningArtifact",
                          "servicecatalog:DeleteProvisioningArtifact",
                          "servicecatalog:UpdateProduct"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "cloudformation:ValidateTemplate"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "ecr:DescribeImages"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "states:DescribeExecution",
                          "states:DescribeStateMachine",
                          "states:StartExecution"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "appconfig:StartDeployment",
                          "appconfig:StopDeployment",
                          "appconfig:GetDeployment"
                      ],
                      "Resource": "*"
                  }
              ],
              "Version": "2012-10-17"
          },
          "Roles": [
              {
                  "Ref": "RoleCodePipelineDeployment"
              }
          ]
          }
      },
      "RoleDeployment": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "RoleName": "CodeDeployServiceRole",
            "Description": "Allows CodeDeploy to call AWS services such as Auto Scaling on your behalf.",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "codedeploy.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
            },
            "Path": "/service-role/",
            "ManagedPolicyArns": [
                {
                    "Ref": "ManagedPolicyArn"
                }
            ]
        }
      },
      "S3Bucket" : {
        "Type" : "AWS::S3::Bucket",
	      "DeletionPolicy": "Retain",
        "Properties" : {
           "BucketName" : "codepipeline-artifactsstore-sampleapp"
         }  
        },
        "CodeDeploySampleApp": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
              "ApplicationName": "SampleApp",
              "ComputePlatform": "Server"
            }
          },
          "DeploymentGroupSampleApp": {
              "Type": "AWS::CodeDeploy::DeploymentGroup",
              "Properties":{
                  "ApplicationName": { "Ref": "CodeDeploySampleApp"},
                  "DeploymentGroupName": "SampleApp_DG",
                  "ServiceRoleArn": { "Fn::GetAtt" : [ "RoleDeployment", "Arn" ] },
                  "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
                  "Ec2TagFilters" : [
                      { "Key" : "Name", "Value" : "Sample-instance", "Type" : "KEY_AND_VALUE" }, 
                      { "Key" : "Environment", "Value" : "dev", "Type" : "KEY_AND_VALUE" }]
                  }
          },
          "CodePipelineSampleApp": {
            "Type": "AWS::CodePipeline::Pipeline",
            "Properties" : {
              "Name" : "Development",
              "RoleArn" : { "Fn::GetAtt" : [ "RoleCodePipelineDeployment", "Arn" ] },
              "Stages" : [
                {
                    "Name": "Source",
                    "Actions": [
                      {
                        "Name": "SourceAction",
                        "ActionTypeId": { 
                            "Category": "Source", 
                            "Owner": "AWS",
                            "Version": "1", 
                            "Provider": "CodeCommit"
                        },
                        "OutputArtifacts": [ { "Name": "SourceOutput" }],
                        "Configuration": {
                            "RepositoryName": "MyDemoRepo",
                            "BranchName": "master",
                            "PollForSourceChanges": "false"
                        },
                        "RunOrder": 1
                      }
                  ]
                },
                {
                    "Name": "Release",
                    "Actions":[
                        {
                            "Name": "ReleaseAction",
                            "ActionTypeId": {
                                "Category": "Deploy", 
                                "Owner": "AWS", 
                                "Version": "1", 
                                "Provider": "CodeDeploy" 
                              },
                              "InputArtifacts": [ { "Name": "SourceOutput" }],
                              "Configuration": { 
                                "ApplicationName": {"Ref" : "CodeDeploySampleApp"}, 
                                "DeploymentGroupName": {"Ref" : "DeploymentGroupSampleApp"} 
                              }, 
                              "RunOrder": 1
                        }
                    ]
                }
              ],
              "ArtifactStore": { 
                "Type": "S3",
                "Location": { "Ref" : "S3Bucket" },
                "EncryptionKey": {
                  "Id": { "Ref": "KMSKeyArn" },
                  "Type": "KMS"
                }
              }
            }
          }
    }
}